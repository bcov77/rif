# copied largely from boost hana and pybind11 .travis config

language: c++
sudo: false


default_sources: &sources
  - ubuntu-toolchain-r-test
  - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
  - deadsnakes

cache:
  apt: true # this currently does nothing?
  directories:
    - $HOME/.ccache
    # these seem to pingpong between py2 and py3
    # but still faster with these lines?
    # - $HOME/.cache/pip
    # - $HOME/Library/Caches/pip
    - ${TRAVIS_BUILD_DIR}/deps/cmake
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.6.2
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.7.1
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.0
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.9.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.59.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.60.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.61.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.62.0
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.63.0

matrix:
  include:
# 1
    - os: linux
      dist: trusty
      env: OS=LU14 UNIT=T GCC=5
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-5, libboost-iostreams-dev, libboost-system-dev]
# 2
    - os: linux
      dist: trusty
      env: OS=LU14 UNIT=T GCC=6
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-6, libboost-iostreams-dev, libboost-system-dev]
# 3
    - os: linux
      dist: trusty
      env: OS=LU14 UNIT=T GCC=6 PY=3
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-6, libboost-iostreams-dev, libboost-system-dev, python3]
# 4
    - os: linux
      dist: trusty
      env:
        OS=LU14 UNIT=T LLVM_VERSION=3.5
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-5, libboost-iostreams-dev, libboost-system-dev]
    - os: linux
      dist: trusty
      env:
        OS=LU14 UNIT=T LLVM_VERSION=3.6
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-5, libboost-iostreams-dev, libboost-system-dev]
    - os: linux
      dist: trusty
      env:
        OS=LU14 UNIT=T LLVM_VERSION=3.7
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-5, libboost-iostreams-dev, libboost-system-dev]
    - os: linux
      dist: trusty
      env:
        OS=LU14 UNIT=T LLVM_VERSION=3.8
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-5, libboost-iostreams-dev, libboost-system-dev]
    - os: linux
      dist: trusty
      env:
        OS=LU14 UNIT=T LLVM_VERSION=3.9
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-5, libboost-iostreams-dev, libboost-system-dev]

# 5
    - os: linux
      env: OS=LU12 UNIT=T LLVM_VERSION=default BOOST_VERSION=1.59.0
      language: c++
      addons:
        apt:
          sources: *sources
          packages: [g++-5]
#
    # - os: linux
    #   env: OS=LU12 UNIT=T GCC=6 BOOST_VERSION=default
    #   language: c++
    #   addons:
    #     apt:
    #       sources: *sources
    #       packages: [g++-6]
# 6
    - os: osx
      env: OS=OSX6 UNIT=T BOOST_VERSION=default
      language: c++
      osx_image: xcode6
# 7
    - os: osx
      env: OS=OSX8 UNIT=T BOOST_VERSION=default PY=3
      language: c++
      osx_image: xcode8

before_install:
  - find . -name .is_built -exec rm {} \;
  # these may be over-ridden in build_util.sh
  - |
    if [ ! -z ${CLANG+x} ]; then
      export CC=clang   ;
      export CXX=clang++ ;
      export CXXFLAGS="-nostdinc++ -Wl,-L${LLVM_DIR}/install/lib -Wl,-lc++ -Wl,-lc++abi"
    fi
  - if [ ! -z ${GCC+x}   ]; then export CC=gcc-$GCC; export CXX=g++-$GCC; fi
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - source tools/build_utils.sh
  - if [[ "${LLVM_VERSION}" == "default" ]]; then LLVM_VERSION=3.9.0; fi
  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.63.0; fi
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
  - if [[ ! "$PY" ]]; then PY=2; fi
  - export PATH=/usr/lib/ccache:$PATH
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then CC=clang; CXX=clang++; fi
  - (echo FINDING_CCACHE in $HOME  && find $HOME -name .ccache)
  - rm -f ${TRAVIS_BUILD_DIR}/.ERROR

install:
  - travis_get_cmake $DEPS_DIR
  - which cmake
  - if [[ "$LLVM_VERSION" ]]; then get_clang $DEPS_DIR $LLVM_VERSION; fi
  - if [[ "$BOOST_VERSION" ]]; then get_boost $DEPS_DIR $BOOST_VERSION; fi
  - if [ ! -z ${DOCS+x} ]; then get_doxygen; fi
  - |
    if [[ $PY == "3" ]]; then
      if [[ $TRAVIS_OS_NAME == "osx" ]]; then brew install python3; fi
      python3 -m ensurepip
      export PIP=$(which pip3)
      export PYTHON=$(which python3)
    else
      export PIP=$(which pip)
      export PYTHON=$(which python2)
    fi
  - echo "!!!!!! travis.yml install using pip $PIP"
  - echo "!!!!!! travis.yml install using python $PYTHON"
  - $PIP install -rrequirements.txt codecov
  - pip install jinja2
  - pip3 install jinja2
  - pip2 install jinja2
  # - pip install --verbose jinja2
  # - pip$PY install --verbose jinja2

before_script:
  - unset CCACHE_DISABLE
  - export USE_CCACHE=1
  - export CCACHE_SLOPPINESS=pch_defines,time_macros
  - export CCACHE_COMPRESS=1
  - export PATH=$(whereis -b ccache |grep -o '\\S*lib\\S*'):$PATH
  - if [ \"$CC\"  == \"clang\" ]; then ln -s $(which ccache) $HOME/clang && ln -s $(which ccache) $HOME/clang++ && export PATH=$HOME:$PATH; fi

script:
  - |
    if [[ $UNIT == T ]]; then
      (python$PY tools/cmake_build_and_run_pytest.py && codecov)
      if [ -f .ERROR ]; then exit 1; fi
    elif [[ $DOSC == T ]]; then
      (cd docs && make html)
    else
      echo "unknown config, nothing done"
    fi

after_script:
  - ccache -s
